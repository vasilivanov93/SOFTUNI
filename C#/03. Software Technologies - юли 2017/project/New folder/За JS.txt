За JS:
1. Отваряме проекта с Visual Code с командата "code .".
2. Отваряме конзола в папката на проекта и пишем командата "npm install".
3. За да стартираме MongoDb отиваме "C:\Program Files\MongoDB\Server\3.4\bin" и отваряме консола за тази папка и 
въвеждаме следната команда "mongod --dbpath C:\MongoDb\KanbanBoard" (като си правим нова папка в "C:\MongoDb"
с името на проекта).
4. Стартираме Robo3Т.
5. Отиваме в папка Models/Task и пишем следните редове код за да си направим модела:
	const mongoose = require('mongoose');

	let taskSchema = mongoose.Schema({
    		title: {type: 'string', required: 'true'},
    		status: {type: 'string', required: 'true'}
	});

	let Task = mongoose.model('Task', taskSchema);

	или

	let Task = mongoose.model('Task', taskSchema, 'allTasks');

	module.exports = Task;

6. Отиваме в папката Controllers/Task:
6.1 В index пишем следния код:

        Task.find().then(tasks => {
res.render('task/index',
                
		     {
   'openTasks': tasks.filter(t => t.status === "Open"),

                         'inProgressTasks': tasks.filter(t => t.status === "In Progress"),

                         'finishedTasks': tasks.filter(t => t.status === "Finished")
 
               	     });
        
	});

или 

	Task.find().then(tasks => {res.render('task/index', {'tasks': tasks})})

6.2 В CreateGet пишем следния код:

	res.render('task/create')

6.3 В CreatePost пишем следния код:

	let task = req.body;
		
        Task.create(task).then(task => {
            res.redirect("/");
        })

6.4 В EditGet пишем следния код:

	let taskId = req.params.id;
		
        Task.findById(taskId).then(task => {
            if (task) {
                res.render('task/edit', task);
            }
            else {
                res.redirect('/');
            }
        }).catch(err => res.redirect('/'));

6.5 В EditPost пишем следния код:

	let taskId = req.params.id;
        let task = req.body;

        Task.findByIdAndUpdate(taskId, task, {runValidators: true}).then(tasks => {
            res.redirect("/");
        }).catch(err => {
            task.id = taskId;
	    task.error = "Cannot edit task.";
			
            return res.render("task/edit", task);
        });

6.6 В DeleteGet пишем следния код:

	let id = req.params.id;
	
	Task.findById(id).then(task => {
		if(!task) {
			res.redirect('/');
			return;
		}

		res.render('task/delete', task);
	});

6.7 В DeletePost  пишем следния код:

	let id = req.params.id;
	
	Task.findByIdAndRemove(id).then(task => {
		res.redirect('/');
	});